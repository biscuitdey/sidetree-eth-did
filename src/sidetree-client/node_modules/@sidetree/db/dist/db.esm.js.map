{"version":3,"file":"db.esm.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/MongoDb.ts","../src/MongoDbBase.ts","../src/MongoDbCasCache.ts","../src/MongoDbOperationQueue.ts","../src/MongoDbTransactionStore.ts","../src/MongoDbUnresolvableTransactionStore.ts","../src/MongoDbOperationStore.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/main/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Collection, MongoClient, Db } from 'mongodb';\n\n/**\n * MongoDB related operations.\n */\nexport default class MongoDb {\n  /**\n   * Test if a MongoDB service is running at the specified url.\n   */\n  public static async isServerAvailable(serverUrl: string): Promise<boolean> {\n    try {\n      const client = await MongoClient.connect(serverUrl, {\n        useUnifiedTopology: true,\n        useNewUrlParser: true,\n      });\n      await client.close();\n    } catch (error) {\n      console.log('Mongoclient connect error: ' + error);\n      return false;\n    }\n    return true;\n  }\n\n  public static async resetDatabase(\n    serverUrl: string,\n    databaseName: string\n  ): Promise<boolean> {\n    try {\n      const client = await MongoClient.connect(serverUrl, {\n        useUnifiedTopology: true,\n        useNewUrlParser: true,\n      });\n      const db = await client.db(databaseName);\n      const res = await db.dropDatabase();\n      await client.close();\n      return res;\n    } catch (error) {\n      console.log('Mongoclient connect error: ' + error);\n      return false;\n    }\n  }\n\n  public static async createCollectionIfNotExist(\n    db: Db,\n    collectionName: string\n  ): Promise<Collection<any>> {\n    // Get the names of existing collections.\n    const collections = await db.collections();\n    const collectionNames = collections.map(\n      (collection) => collection.collectionName\n    );\n    const collectionExists = collectionNames.find((c) => c === collectionName);\n\n    // If the collection exists, use it; else create it then use it.\n    let collection;\n    if (collectionExists) {\n      console.info(`Reusing existing collection ${collectionName}`);\n      collection = db.collection(collectionName);\n    } else {\n      console.info(`Creating new collection ${collectionName}`);\n      collection = await db.createCollection(collectionName);\n    }\n    return collection;\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/main/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Collection, MongoClient, Db } from 'mongodb';\nimport MongoDb from './MongoDb';\n\nexport default abstract class MongoDbBase {\n  abstract collectionName: string;\n  private serverUrl: string;\n  public databaseName: string;\n  private client: MongoClient | undefined;\n  protected db: Db | undefined;\n  protected collection: Collection<any> | undefined;\n\n  constructor(serverUrl: string, databaseName: string) {\n    this.serverUrl = serverUrl;\n    this.databaseName = databaseName;\n  }\n\n  public async close(): Promise<void> {\n    return this.client!.close();\n  }\n\n  public async clearCollection(): Promise<void> {\n    await this.collection!.deleteMany({});\n  }\n\n  public async initialize(): Promise<void> {\n    this.client =\n      this.client ||\n      (await MongoClient.connect(this.serverUrl, {\n        useUnifiedTopology: true,\n        useNewUrlParser: true,\n      })); // `useNewUrlParser` addresses nodejs's URL parser deprecation warning.\n    this.db = this.client.db(this.databaseName);\n    this.collection = await MongoDb.createCollectionIfNotExist(\n      this.db!,\n      this.collectionName\n    );\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/main/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchResult, FetchResultCode } from '@sidetree/common';\nimport MongoDbBase from './MongoDbBase';\n\nexport default class MongoDbCasCache extends MongoDbBase {\n  readonly collectionName = 'cas-cache';\n\n  public async initialize(): Promise<void> {\n    await super.initialize();\n    await this.collection!.createIndex({ hash: 1 }, { unique: true });\n  }\n\n  async read(hash: string): Promise<FetchResult> {\n    const operations = await this.collection!.find({ hash })\n      .limit(1)\n      .toArray();\n    if (operations.length === 1) {\n      const operation = operations.pop();\n      return {\n        code: FetchResultCode.Success,\n        content: operation!.content.buffer as Buffer,\n      };\n    }\n    return {\n      code: FetchResultCode.NotFound,\n    };\n  }\n\n  async write(hash: string, content: Buffer): Promise<void> {\n    try {\n      await this.collection!.insertOne({ hash, content });\n    } catch (error) {\n      // Duplicate insert errors (error code 11000).\n      if (error.code !== 11000) {\n        throw error;\n      }\n    }\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/main/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ErrorCode,\n  IOperationQueue,\n  SidetreeError,\n  QueuedOperationModel,\n} from '@sidetree/common';\nimport { Binary, ObjectId } from 'mongodb';\nimport MongoDbBase from './MongoDbBase';\n\n/**\n * Sidetree operation stored in MongoDb.\n * Note: we use the shorter property name \"opIndex\" instead of \"operationIndex\" due to a constraint imposed by CosmosDB/MongoDB:\n * the sum of property names of a unique index keys need to be less than 40 characters.\n * Note: We represent opIndex, transactionNumber, and transactionTime as long instead of number (double) to avoid some floating\n * point comparison quirks.\n */\ninterface IMongoQueuedOperation {\n  _id?: ObjectId;\n  didUniqueSuffix: string;\n  operationBufferBsonBinary: Binary;\n}\n\n/**\n * Operation queue used by the Batch Writer implemented using MongoDB.\n */\nexport default class MongoDbOperationQueue extends MongoDbBase\n  implements IOperationQueue {\n  readonly collectionName = 'queued-operations';\n\n  public async initialize(): Promise<void> {\n    await super.initialize();\n    await this.collection!.createIndex(\n      { didUniqueSuffix: 1 },\n      { unique: true }\n    );\n  }\n\n  async enqueue(\n    didUniqueSuffix: string,\n    operationBuffer: Buffer\n  ): Promise<void> {\n    try {\n      const queuedOperation: IMongoQueuedOperation = {\n        didUniqueSuffix,\n        operationBufferBsonBinary: new Binary(operationBuffer),\n      };\n\n      await this.collection!.insertOne(queuedOperation);\n    } catch (error) {\n      // Duplicate insert errors (error code 11000).\n      if (error.code === 11000) {\n        throw new SidetreeError(ErrorCode.BatchWriterAlreadyHasOperationForDid);\n      }\n\n      throw error;\n    }\n  }\n\n  async dequeue(count: number): Promise<QueuedOperationModel[]> {\n    if (count <= 0) {\n      return [];\n    }\n\n    const queuedOperations = await this.collection!.find()\n      .sort({ _id: 1 })\n      .limit(count)\n      .toArray();\n    const lastOperation = queuedOperations[queuedOperations.length - 1];\n    await this.collection!.deleteMany({ _id: { $lte: lastOperation._id } });\n\n    return queuedOperations.map((operation) =>\n      MongoDbOperationQueue.convertToQueuedOperationModel(operation)\n    );\n  }\n\n  async peek(count: number): Promise<QueuedOperationModel[]> {\n    if (count <= 0) {\n      return [];\n    }\n\n    // NOTE: `_id` is the default index that is sorted based by create time.\n    const queuedOperations = await this.collection!.find()\n      .sort({ _id: 1 })\n      .limit(count)\n      .toArray();\n\n    return queuedOperations.map((operation) =>\n      MongoDbOperationQueue.convertToQueuedOperationModel(operation)\n    );\n  }\n\n  /**\n   * Checks to see if the queue already contains an operation for the given DID unique suffix.\n   */\n  async contains(didUniqueSuffix: string): Promise<boolean> {\n    const operations = await this.collection!.find({ didUniqueSuffix })\n      .limit(1)\n      .toArray();\n    return operations.length > 0;\n  }\n\n  private static convertToQueuedOperationModel(\n    mongoQueuedOperation: IMongoQueuedOperation\n  ): QueuedOperationModel {\n    return {\n      didUniqueSuffix: mongoQueuedOperation.didUniqueSuffix,\n      operationBuffer: mongoQueuedOperation.operationBufferBsonBinary.buffer,\n    };\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/main/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ITransactionStore, TransactionModel } from '@sidetree/common';\nimport { Cursor, Long } from 'mongodb';\nimport MongoDbBase from './MongoDbBase';\n\n/**\n * Implementation of ITransactionStore that stores the transaction data in a MongoDB database.\n */\nexport default class MongoDbTransactionStore extends MongoDbBase\n  implements ITransactionStore {\n  readonly collectionName = 'transactions';\n\n  public async initialize(): Promise<void> {\n    await super.initialize();\n    await this.collection!.createIndex(\n      { transactionNumber: 1 },\n      { unique: true }\n    );\n  }\n\n  /**\n   * Returns the number of transactions in the store.\n   * Mainly used by tests.\n   */\n  public async getTransactionsCount(): Promise<number> {\n    const transactionCount = await this.collection!.countDocuments();\n    return transactionCount;\n  }\n\n  public async getTransaction(\n    transactionNumber: number\n  ): Promise<TransactionModel | undefined> {\n    const transactions = await this.collection!.find({\n      transactionNumber: Long.fromNumber(transactionNumber),\n    }).toArray();\n    if (transactions.length === 0) {\n      return undefined;\n    }\n\n    const transaction = transactions[0];\n    return transaction;\n  }\n\n  public async getTransactionsLaterThan(\n    transactionNumber: number | undefined,\n    max: number | undefined\n  ): Promise<TransactionModel[]> {\n    let transactions = [];\n\n    try {\n      let dbCursor: Cursor<any>;\n\n      // If given `undefined`, return transactions from the start.\n      if (transactionNumber === undefined) {\n        dbCursor = this.collection!.find();\n      } else {\n        dbCursor = this.collection!.find({\n          transactionNumber: { $gt: Long.fromNumber(transactionNumber) },\n        });\n      }\n\n      // If a limit is defined then set it.\n      if (max) {\n        dbCursor = dbCursor.limit(max);\n      }\n\n      // Sort the output\n      dbCursor = dbCursor.sort({ transactionNumber: 1 });\n\n      // Fetch the transactions\n      transactions = await dbCursor.toArray();\n    } catch (error) {\n      console.error(error);\n    }\n\n    return transactions;\n  }\n\n  async addTransaction(transaction: TransactionModel): Promise<void> {\n    try {\n      const transactionInMongoDb = {\n        anchorString: transaction.anchorString,\n        // NOTE: MUST force `transactionNumber` to be Int64 in MongoDB.\n        transactionNumber: Long.fromNumber(transaction.transactionNumber),\n        transactionTime: transaction.transactionTime,\n        transactionTimeHash: transaction.transactionTimeHash,\n        transactionFeePaid: transaction.transactionFeePaid,\n        normalizedTransactionFee: transaction.normalizedTransactionFee,\n        writer: transaction.writer,\n      };\n      await this.collection!.insertOne(transactionInMongoDb);\n    } catch (error) {\n      // Swallow duplicate insert errors (error code 11000) as no-op; rethrow others\n      if (error.code !== 11000) {\n        throw error;\n      }\n    }\n  }\n\n  async getLastTransaction(): Promise<TransactionModel | undefined> {\n    const lastTransactions = await this.collection!.find()\n      .limit(1)\n      .sort({ transactionNumber: -1 })\n      .toArray();\n    if (lastTransactions.length === 0) {\n      return undefined;\n    }\n\n    const lastProcessedTransaction = lastTransactions[0];\n    return lastProcessedTransaction;\n  }\n\n  async getExponentiallySpacedTransactions(): Promise<TransactionModel[]> {\n    const exponentiallySpacedTransactions: TransactionModel[] = [];\n    const allTransactions = await this.collection!.find()\n      .sort({ transactionNumber: 1 })\n      .toArray();\n\n    let index = allTransactions.length - 1;\n    let distance = 1;\n    while (index >= 0) {\n      exponentiallySpacedTransactions.push(allTransactions[index]);\n      index -= distance;\n      distance *= 2;\n    }\n    return exponentiallySpacedTransactions;\n  }\n\n  async removeTransactionsLaterThan(transactionNumber?: number): Promise<void> {\n    // If given `undefined`, remove all transactions.\n    if (transactionNumber === undefined) {\n      await this.clearCollection();\n      return;\n    }\n\n    await this.collection!.deleteMany({\n      transactionNumber: { $gt: Long.fromNumber(transactionNumber) },\n    });\n  }\n\n  /**\n   * Gets the list of processed transactions.\n   * Mainly used for test purposes.\n   */\n  public async getTransactions(): Promise<TransactionModel[]> {\n    const transactions = await this.collection!.find()\n      .sort({ transactionNumber: 1 })\n      .toArray();\n    return transactions;\n  }\n\n  /**\n   * Gets a list of transactions between the bounds of transaction time. The smaller value will be inclusive while the bigger be exclusive\n   * @param inclusiveBeginTransactionTime The first transaction time to begin querying for\n   * @param exclusiveEndTransactionTime The transaction time to stop querying for\n   */\n  public async getTransactionsStartingFrom(\n    inclusiveBeginTransactionTime: number,\n    exclusiveEndTransactionTime: number\n  ): Promise<TransactionModel[]> {\n    let cursor: Cursor<any>;\n    if (inclusiveBeginTransactionTime === exclusiveEndTransactionTime) {\n      // if begin === end, query for 1 transaction time\n      cursor = this.collection!.find({\n        transactionTime: {\n          $eq: Long.fromNumber(inclusiveBeginTransactionTime),\n        },\n      });\n    } else {\n      cursor = this.collection!.find({\n        $and: [\n          {\n            transactionTime: {\n              $gte: Long.fromNumber(inclusiveBeginTransactionTime),\n            },\n          },\n          {\n            transactionTime: {\n              $lt: Long.fromNumber(exclusiveEndTransactionTime),\n            },\n          },\n        ],\n      });\n    }\n\n    const transactions: TransactionModel[] = await cursor\n      .sort({ transactionNumber: 1 })\n      .toArray();\n    return transactions;\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/main/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  IUnresolvableTransactionStore,\n  TransactionModel,\n} from '@sidetree/common';\nimport { Long } from 'mongodb';\nimport MongoDbBase from './MongoDbBase';\n\ninterface IUnresolvableTransaction extends TransactionModel {\n  firstFetchTime: number;\n  retryAttempts: number;\n  nextRetryTime: number;\n}\n\n/**\n * Implementation of `IIUnresolvableTransactionStore` that stores the transaction data in a MongoDB database.\n */\n\nexport default class MongoDbUnresolvableTransactionStore extends MongoDbBase\n  implements IUnresolvableTransactionStore {\n  public readonly collectionName: string = 'unresolvable-transactions';\n\n  private exponentialDelayFactorInMilliseconds = 60000;\n  private maximumUnresolvableTransactionReturnCount = 100;\n\n  /**\n   * Constructs a `MongoDbUnresolvableTransactionStore`;\n   * @param retryExponentialDelayFactor\n   *   The exponential delay factor in milliseconds for retries of unresolvable transactions.\n   *   e.g. if it is set to 1 seconds, then the delays for retries will be 1 second, 2 seconds, 4 seconds... until the transaction can be resolved.\n   */\n  constructor(\n    serverUrl: string,\n    databaseName: string,\n    retryExponentialDelayFactor?: number\n  ) {\n    super(serverUrl, databaseName);\n\n    if (retryExponentialDelayFactor !== undefined) {\n      this.exponentialDelayFactorInMilliseconds = retryExponentialDelayFactor;\n    }\n  }\n\n  public async initialize(): Promise<void> {\n    await super.initialize();\n    await this.collection!.createIndex(\n      { transactionTime: 1, transactionNumber: 1 },\n      { unique: true }\n    );\n    await this.collection!.createIndex({\n      nextRetryTime: 1,\n    });\n  }\n\n  async recordUnresolvableTransactionFetchAttempt(\n    transaction: TransactionModel\n  ): Promise<void> {\n    // Try to get the unresolvable transaction from store.\n    const transactionTime = transaction.transactionTime;\n    const transactionNumber = transaction.transactionNumber;\n    const searchFilter = {\n      transactionTime,\n      transactionNumber: Long.fromNumber(transactionNumber),\n    };\n    const findResults = await this.collection!.find(searchFilter).toArray();\n    let unresolvableTransaction: IUnresolvableTransaction | undefined;\n    if (findResults && findResults.length > 0) {\n      unresolvableTransaction = findResults[0];\n    }\n\n    // If unresolvable transaction not found in store, insert a new one; else update the info on retry attempts.\n    if (unresolvableTransaction === undefined) {\n      const newUnresolvableTransaction = {\n        transactionTime,\n        transactionNumber: Long.fromNumber(transactionNumber),\n        anchorString: transaction.anchorString,\n        transactionTimeHash: transaction.transactionTimeHash,\n        firstFetchTime: Date.now(),\n        retryAttempts: 0,\n        nextRetryTime: Date.now(),\n      };\n\n      await this.collection!.insertOne(newUnresolvableTransaction);\n    } else {\n      const retryAttempts = unresolvableTransaction.retryAttempts + 1;\n\n      // Exponentially delay the retry the more attempts are done in the past.\n      const anchorString = transaction.anchorString;\n      const requiredElapsedTimeSinceFirstFetchBeforeNextRetry =\n        Math.pow(2, unresolvableTransaction.retryAttempts) *\n        this.exponentialDelayFactorInMilliseconds;\n      const requiredElapsedTimeInSeconds =\n        requiredElapsedTimeSinceFirstFetchBeforeNextRetry / 1000;\n      console.info(\n        `Record transaction ${transactionNumber} with anchor string ${anchorString} to retry after ${requiredElapsedTimeInSeconds} seconds.`\n      );\n      const nextRetryTime =\n        unresolvableTransaction.firstFetchTime +\n        requiredElapsedTimeSinceFirstFetchBeforeNextRetry;\n\n      const searchFilter = {\n        transactionTime,\n        transactionNumber: Long.fromNumber(transactionNumber),\n      };\n      await this.collection!.updateOne(searchFilter, {\n        $set: { retryAttempts, nextRetryTime },\n      });\n    }\n  }\n\n  async removeUnresolvableTransaction(\n    transaction: TransactionModel\n  ): Promise<void> {\n    const transactionTime = transaction.transactionTime;\n    const transactionNumber = transaction.transactionNumber;\n    await this.collection!.deleteOne({\n      transactionTime,\n      transactionNumber: Long.fromNumber(transactionNumber),\n    });\n  }\n\n  async getUnresolvableTransactionsDueForRetry(\n    maximumReturnCount?: number\n  ): Promise<TransactionModel[]> {\n    // Override the return count if it is specified.\n    let returnCount = this.maximumUnresolvableTransactionReturnCount;\n    if (maximumReturnCount !== undefined) {\n      returnCount = maximumReturnCount;\n    }\n\n    const now = Date.now();\n    const unresolvableTransactionsToRetry = await this.collection!.find({\n      nextRetryTime: { $lte: now },\n    })\n      .sort({ nextRetryTime: 1 })\n      .limit(returnCount)\n      .toArray();\n\n    return unresolvableTransactionsToRetry;\n  }\n\n  async removeUnresolvableTransactionsLaterThan(\n    transactionNumber?: number\n  ): Promise<void> {\n    // If given `undefined`, remove all transactions.\n    if (transactionNumber === undefined) {\n      await this.clearCollection();\n      return;\n    }\n\n    await this.collection!.deleteMany({\n      transactionNumber: { $gt: Long.fromNumber(transactionNumber) },\n    });\n  }\n\n  /**\n   * Gets the list of unresolvable transactions.\n   * Mainly used for test purposes.\n   */\n  public async getUnresolvableTransactions(): Promise<\n    IUnresolvableTransaction[]\n  > {\n    const transactions = await this.collection!.find()\n      .sort({ transactionTime: 1, transactionNumber: 1 })\n      .toArray();\n    return transactions;\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/main/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnchoredOperationModel,\n  IOperationStore,\n  OperationType,\n} from '@sidetree/common';\nimport MongoDbBase from './MongoDbBase';\n\nexport default class MongoDbOperationStore extends MongoDbBase\n  implements IOperationStore {\n  readonly collectionName = 'operation';\n\n  public async initialize(): Promise<void> {\n    await super.initialize();\n    await this.collection!.createIndex({ didUniqueSuffix: 1 });\n  }\n\n  public async put(operations: AnchoredOperationModel[]): Promise<void> {\n    // Remove duplicates (same operationIndex) from the operations array\n    const operationsWithoutDuplicates = operations.reduce(\n      (opsWithoutDuplicates: AnchoredOperationModel[], operation) => {\n        const exists = opsWithoutDuplicates.find(\n          (op) => op.operationIndex === operation.operationIndex\n        );\n        if (exists) {\n          return opsWithoutDuplicates;\n        } else {\n          return [...opsWithoutDuplicates, operation];\n        }\n      },\n      []\n    );\n    // Only insert new elements\n    const onlyNewElements: AnchoredOperationModel[] = [];\n    for (const operation of operationsWithoutDuplicates) {\n      const anchoredOperation: AnchoredOperationModel = operation;\n      const res = await this.get(anchoredOperation.didUniqueSuffix);\n      const isDuplicated = res.find(\n        (op) =>\n          op.operationIndex === anchoredOperation.operationIndex &&\n          op.transactionNumber === anchoredOperation.transactionNumber\n      );\n      if (!isDuplicated) {\n        onlyNewElements.push(anchoredOperation);\n      }\n    }\n    if (onlyNewElements.length > 0) {\n      await this.collection!.insertMany(onlyNewElements);\n    }\n  }\n\n  public async get(didUniqueSuffix: string): Promise<AnchoredOperationModel[]> {\n    const results = await this.collection!.find({\n      didUniqueSuffix,\n    }).toArray();\n    // Ensure operations are sorted by increasing order of operationIndex\n    results.sort((op1, op2) => op1.operationIndex - op2.operationIndex);\n    return results;\n  }\n\n  public async delete(transactionNumber?: number): Promise<void> {\n    if (transactionNumber) {\n      await this.collection!.deleteMany({\n        transactionNumber: { $gt: transactionNumber },\n      });\n    } else {\n      await this.collection!.deleteMany({});\n    }\n  }\n\n  public async deleteUpdatesEarlierThan(\n    didUniqueSuffix: string,\n    transactionNumber: number,\n    operationIndex: number\n  ): Promise<void> {\n    await this.collection!.deleteMany({\n      $or: [\n        {\n          didUniqueSuffix,\n          transactionNumber: { $lt: transactionNumber },\n          type: OperationType.Update,\n        },\n        {\n          didUniqueSuffix,\n          transactionNumber,\n          operationIndex: { $lt: operationIndex },\n          type: OperationType.Update,\n        },\n      ],\n    });\n  }\n}\n"],"names":["undefined","MongoDb","isServerAvailable","serverUrl","MongoClient","connect","useUnifiedTopology","useNewUrlParser","client","close","console","log","resetDatabase","databaseName","db","dropDatabase","res","createCollectionIfNotExist","collectionName","collections","collectionNames","map","collection","collectionExists","find","c","info","createCollection","MongoDbBase","clearCollection","deleteMany","initialize","MongoDbCasCache","createIndex","hash","unique","read","limit","toArray","operations","length","operation","pop","code","FetchResultCode","Success","content","buffer","NotFound","write","insertOne","MongoDbOperationQueue","didUniqueSuffix","enqueue","operationBuffer","queuedOperation","operationBufferBsonBinary","Binary","SidetreeError","ErrorCode","BatchWriterAlreadyHasOperationForDid","dequeue","count","sort","_id","queuedOperations","lastOperation","$lte","convertToQueuedOperationModel","peek","contains","mongoQueuedOperation","MongoDbTransactionStore","transactionNumber","getTransactionsCount","countDocuments","transactionCount","getTransaction","Long","fromNumber","transactions","transaction","getTransactionsLaterThan","max","dbCursor","$gt","error","addTransaction","transactionInMongoDb","anchorString","transactionTime","transactionTimeHash","transactionFeePaid","normalizedTransactionFee","writer","getLastTransaction","lastTransactions","lastProcessedTransaction","getExponentiallySpacedTransactions","exponentiallySpacedTransactions","allTransactions","index","distance","push","removeTransactionsLaterThan","getTransactions","getTransactionsStartingFrom","inclusiveBeginTransactionTime","exclusiveEndTransactionTime","cursor","$eq","$and","$gte","$lt","MongoDbUnresolvableTransactionStore","retryExponentialDelayFactor","exponentialDelayFactorInMilliseconds","nextRetryTime","recordUnresolvableTransactionFetchAttempt","searchFilter","findResults","unresolvableTransaction","newUnresolvableTransaction","firstFetchTime","Date","now","retryAttempts","requiredElapsedTimeSinceFirstFetchBeforeNextRetry","Math","pow","requiredElapsedTimeInSeconds","updateOne","$set","removeUnresolvableTransaction","deleteOne","getUnresolvableTransactionsDueForRetry","maximumReturnCount","returnCount","maximumUnresolvableTransactionReturnCount","unresolvableTransactionsToRetry","removeUnresolvableTransactionsLaterThan","getUnresolvableTransactions","MongoDbOperationStore","put","operationsWithoutDuplicates","reduce","opsWithoutDuplicates","exists","op","operationIndex","onlyNewElements","anchoredOperation","get","isDuplicated","insertMany","results","op1","op2","deleteUpdatesEarlierThan","$or","type","OperationType","Update"],"mappings":"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"}