{"version":3,"file":"universal-wallet.cjs.development.js","sources":["../src/types/index.ts","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/security.ts","../src/walletFactory.ts"],"sourcesContent":["export enum WalletStatus {\n  Locked = 'LOCKED',\n  Unlocked = 'UNLOCKED',\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { Cipher } from 'minimal-cipher';\n\nimport crypto from 'isomorphic-webcrypto';\nimport { X25519KeyPair } from '@transmute/did-key-x25519';\nimport { Ed25519KeyPair, driver } from '@transmute/did-key-ed25519';\n\nexport const seedToId = async (seed: Uint8Array) => {\n  const buffer = await crypto.subtle.digest('SHA-256', seed);\n  return `urn:digest:${Buffer.from(new Int8Array(buffer)).toString('hex')}`;\n};\n\nexport const passwordToKey = async (\n  password: string,\n  salt: string = 'salt',\n  iterations: number = 100000,\n  digest: string = 'SHA-256'\n): Promise<Uint8Array> => {\n  var saltBuffer = Buffer.from(salt);\n  var passphraseKey = Buffer.from(password);\n  return crypto.subtle\n    .importKey('raw', passphraseKey, { name: 'PBKDF2' }, false, [\n      'deriveBits',\n      'deriveKey',\n    ])\n    .then(function(key: any) {\n      return crypto.subtle.deriveKey(\n        {\n          name: 'PBKDF2',\n          salt: saltBuffer,\n          iterations: iterations,\n          hash: digest,\n        },\n        key,\n        // Note: we don't actually need a cipher suite,\n        // but the api requires that it must be specified.\n        // For AES the length required to be 128 or 256 bits (not bytes)\n        { name: 'AES-CBC', length: 256 },\n        // Whether or not the key is extractable (less secure) or not (more secure)\n        // when false, the key can only be passed as a web crypto object, not inspected\n        true,\n        // this web crypto object will only be allowed for these functions\n        ['encrypt', 'decrypt']\n      );\n    })\n    .then((webKey: any) => {\n      return crypto.subtle.exportKey('raw', webKey);\n    })\n    .then((buffer: any) => {\n      return new Uint8Array(buffer);\n    });\n};\n\nexport const unlockDidKey = async (seed: Uint8Array): Promise<any> => {\n  const ed25519Key = await Ed25519KeyPair.generate({\n    secureRandom: ()=> {\n      return seed;\n    },\n  });\n  const result = await driver.resolve(ed25519Key.controller);\n  const unlockedDIDDocument = {\n    ...result.didDocument,\n  };\n  \n  const x25519Key = ed25519Key.toX25519KeyPair(true);\n\n  unlockedDIDDocument.verificationMethod[0].privateKeyBase58 =\n    ed25519Key.toKeyPair(true).privateKeyBase58;\n  unlockedDIDDocument.verificationMethod[1].privateKeyBase58 =\n    x25519Key.toKeyPair(true).privateKeyBase58;\n  return unlockedDIDDocument;\n};\n\nexport const lockDidKey = (unlockedDIDDocument: any): any => {\n  delete unlockedDIDDocument.verificationMethod[0].privateKeyBase58;\n  delete unlockedDIDDocument.verificationMethod[1].privateKeyBase58;\n  const didDocument = { ...unlockedDIDDocument };\n  return didDocument;\n};\n\nexport const getKeyResolver = (didDocument: any) => {\n  let keyAgreementKey: any = didDocument.verificationMethod[1];\n  const keyResolver = ({ id }: any) => {\n    if (keyAgreementKey.id === id) {\n      return keyAgreementKey;\n    }\n    throw new Error(`Key ${id} not found in ${didDocument.id}`);\n  };\n  return keyResolver;\n};\n\nexport const lockContent = async ({\n  content,\n  cipher,\n  recipients,\n  keyResolver,\n}: any) => {\n  const jwe = await cipher.encryptObject({\n    obj: content,\n    recipients,\n    keyResolver,\n  });\n  return jwe;\n};\n\nexport const unlockContent = async ({\n  content,\n  cipher,\n  keyAgreementKey,\n}: any) => {\n  return cipher.decryptObject({\n    jwe: content,\n    keyAgreementKey: new X25519KeyPair(keyAgreementKey),\n  });\n};\n\nexport const lockContents = async (\n  password: string,\n  contents: any[]\n): Promise<any[]> => {\n  const derivedKey = await passwordToKey(password);\n  const unlockedDidKey = await unlockDidKey(derivedKey);\n  const lockedDidKey = lockDidKey(unlockedDidKey);\n  const keyAgreementKey = lockedDidKey.verificationMethod[1];\n  if (keyAgreementKey.id.indexOf('#') === 0) {\n    keyAgreementKey.id = keyAgreementKey.controller + keyAgreementKey.id;\n  }\n  const recipient = {\n    header: {\n      kid: keyAgreementKey.id,\n      alg: 'ECDH-ES+A256KW',\n    },\n  };\n  const recipients = [recipient];\n  const keyResolver = getKeyResolver(lockedDidKey);\n  const cipher = new Cipher();\n  return Promise.all(\n    contents.map(content => {\n      return lockContent({\n        content: { ...content },\n        cipher,\n        recipients: [...recipients],\n        keyResolver,\n      });\n    })\n  );\n};\n\nexport const unlockContents = async (\n  password: string,\n  contents: any[]\n): Promise<any[]> => {\n  const derivedKey = await passwordToKey(password);\n  const unlockedDidKey = await unlockDidKey(derivedKey);\n  const keyAgreementKey = unlockedDidKey.verificationMethod[1];\n  if (keyAgreementKey.id.indexOf('#') === 0) {\n    keyAgreementKey.id = keyAgreementKey.controller + keyAgreementKey.id;\n  }\n  const cipher = new Cipher();\n  let decryptedContents = [];\n  for (let i = 0; i < contents.length; i++) {\n    const content = contents[i];\n    const decryptedContent = await unlockContent({\n      content,\n      cipher,\n      keyAgreementKey,\n    });\n    decryptedContents.push(decryptedContent);\n  }\n  return decryptedContents;\n};\n","import * as Factory from 'factory.ts';\n\nimport { WalletStatus } from './types';\n\nimport {\n  lockContents,\n  unlockContents,\n  passwordToKey,\n  seedToId,\n  unlockDidKey,\n} from './security';\n\ninterface Wallet {\n  status: WalletStatus;\n  contents: any[];\n  passwordToKey: (password: string) => Promise<Uint8Array>;\n  seedToId: (seed: Uint8Array) => Promise<string>;\n  add: (content: any) => Wallet;\n  remove: (contentId: string) => Wallet;\n  lock: (password: string) => Promise<Wallet>;\n  unlock: (password: string) => Promise<Wallet>;\n  export: (password: string) => Promise<any>;\n  import: (encryptedWalletCredential: any, password: string) => Promise<Wallet>;\n  query: (map: any, reduce: any, initialValue: any) => any;\n}\n\nconst walletDefaults = {\n  status: WalletStatus.Unlocked,\n  contents: [],\n  passwordToKey,\n  seedToId,\n  add: function (content: any): Wallet {\n    (this as Wallet).contents.push(content);\n    return this;\n  },\n  remove: function (contentId: string): any {\n    let contents = JSON.parse(JSON.stringify(this.contents));\n    let index = contents.findIndex((c: any) => {\n      return c.id === contentId;\n    });\n    let content = contents[index];\n    this.contents = contents.filter((i: any) => {\n      return i.id !== content.id;\n    });\n\n    return content;\n  },\n  lock: async function (password: string): Promise<Wallet> {\n    (this as Wallet).contents = await lockContents(\n      password,\n      (this as Wallet).contents\n    );\n    (this as Wallet).status = WalletStatus.Locked;\n    return this;\n  },\n  unlock: async function (password: string): Promise<Wallet> {\n    (this as Wallet).contents = await unlockContents(\n      password,\n      (this as Wallet).contents\n    );\n    (this as Wallet).status = WalletStatus.Unlocked;\n    return this;\n  },\n  export: async function (password: string): Promise<any> {\n    const seed = await passwordToKey(password);\n    const didDoc = await unlockDidKey(seed);\n    // we don't want to leak number of wallet contents...\n    // so we push them into a single object before encrypting.\n    const lockedContents = await lockContents(password, [\n      {\n        contents: (this as Wallet).contents,\n      },\n    ]);\n    const encryptedWallet = {\n      '@context': [\n        'https://www.w3.org/2018/credentials/v1',\n        'http://w3id.org/wallet/v1',\n      ],\n      // consider using content id of ciphertext here...\n      id: didDoc.id + '#encrypted-wallet',\n      type: ['VerifiableCredential', 'EncryptedWallet'],\n      issuer: didDoc.id,\n      issuanceDate: new Date().toISOString(),\n      credentialSubject: {\n        id: didDoc.id,\n        encryptedWalletContents: lockedContents[0],\n      },\n    };\n    return encryptedWallet;\n  },\n  import: async function (\n    encryptedWalletCredential: any,\n    password: string\n  ): Promise<any> {\n    if (this.contents.length) {\n      throw new Error('Cannot import over existing wallet content.');\n    }\n    const unlockedContents = await unlockContents(password, [\n      encryptedWalletCredential.credentialSubject.encryptedWalletContents,\n    ]);\n    this.contents = unlockedContents[0].contents;\n    this.status = WalletStatus.Unlocked;\n    return this;\n  },\n  query: function (map: any, reduce: any, initialValue: any) {\n    if (this.status !== WalletStatus.Unlocked) {\n      throw new Error('You can only query an unlocked wallet.');\n    }\n    let results = this.contents.map(map);\n    if (reduce) {\n      return results.reduce(reduce, initialValue);\n    }\n    return results;\n  },\n};\n\nconst walletFactory = Factory.Sync.makeFactory<Wallet>(walletDefaults);\n\nconst wallet = walletFactory.build();\n\nexport { Wallet, walletFactory, walletDefaults, wallet };\n"],"names":["WalletStatus","seedToId","seed","crypto","subtle","digest","buffer","Buffer","from","Int8Array","toString","passwordToKey","password","salt","iterations","saltBuffer","passphraseKey","importKey","name","then","key","deriveKey","hash","length","webKey","exportKey","Uint8Array","unlockDidKey","Ed25519KeyPair","generate","secureRandom","ed25519Key","driver","resolve","controller","result","unlockedDIDDocument","didDocument","x25519Key","toX25519KeyPair","verificationMethod","privateKeyBase58","toKeyPair","lockDidKey","getKeyResolver","keyAgreementKey","keyResolver","id","Error","lockContent","content","cipher","recipients","encryptObject","obj","unlockContent","decryptObject","jwe","X25519KeyPair","lockContents","contents","derivedKey","unlockedDidKey","lockedDidKey","indexOf","recipient","header","kid","alg","Cipher","Promise","all","map","unlockContents","decryptedContents","i","decryptedContent","push","walletDefaults","status","Unlocked","add","remove","contentId","JSON","parse","stringify","index","findIndex","c","filter","lock","Locked","unlock","didDoc","lockedContents","encryptedWallet","type","issuer","issuanceDate","Date","toISOString","credentialSubject","encryptedWalletContents","encryptedWalletCredential","unlockedContents","query","reduce","initialValue","results","walletFactory","Factory","makeFactory"],"mappings":"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"}